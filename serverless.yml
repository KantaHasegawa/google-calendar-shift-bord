service: shiftboard

frameworkVersion: '3'

provider:
  name: aws
  runtime: go1.x
  region: ap-northeast-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/shiftboard-${opt:stage}
        - arn:aws:dynamodb:${self:provider.region}:*:table/shiftboard-${opt:stage}/index/*

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  include:
    - './**'

functions:
  main:
    handler: bin/main
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
# events:
#    events:
#      - http:
#          path: users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

resources:
  Resources:
    shiftboard:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: shiftboard-${opt:stage}
        AttributeDefinitions:
          - AttributeName: user
            AttributeType: S
          # - AttributeName: attendance
          #   AttributeType: S
        KeySchema:
          - AttributeName: user
            KeyType: HASH
          # - AttributeName: attendance
          #   KeyType: RANGE
        # GlobalSecondaryIndexes:
        #   - IndexName: usersIndex
        #     KeySchema:
        #       - AttributeName: attendance
        #         KeyType: HASH
        #     Projection:
        #       ProjectionType: ALL
        #     ProvisionedThroughput:
        #       ReadCapacityUnits: 1
        #       WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
plugins:
  - serverless-offline

custom:
  serverless-offline:
    useDocker: true
