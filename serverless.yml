service: shiftboard

frameworkVersion: '3'

provider:
  name: aws
  region: ap-northeast-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/shiftboard-${opt:stage}
        - arn:aws:dynamodb:${self:provider.region}:*:table/shiftboard-${opt:stage}/index/*

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  include:
    - './bin/main'
    - './cognitoPostConfirmation/handler.js'

functions:
  main:
    runtime: go1.x
    handler: bin/main
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

  cognitoPostConfirmation:
    runtime: nodejs14.x
    handler: cognitoPostConfirmation/handler.handler
    events:
      - cognitoUserPool:
          pool: ShiftboardUserPool
          trigger: PostConfirmation

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
# events:
#    events:
#      - http:
#          path: users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

resources:
  Resources:
    dynamo:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: shiftboard-${opt:stage}
        AttributeDefinitions:
          - AttributeName: user
            AttributeType: S
          # - AttributeName: attendance
          #   AttributeType: S
        KeySchema:
          - AttributeName: user
            KeyType: HASH
          # - AttributeName: attendance
          #   KeyType: RANGE
        # GlobalSecondaryIndexes:
        #   - IndexName: usersIndex
        #     KeySchema:
        #       - AttributeName: attendance
        #         KeyType: HASH
        #     Projection:
        #       ProjectionType: ALL
        #     ProvisionedThroughput:
        #       ReadCapacityUnits: 1
        #       WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    CognitoUserPoolShiftboardUserPool:
      Type: "AWS::Cognito::UserPool"
      Properties:
          UserPoolName: shiftboard-${opt:stage}
          Policies:
              PasswordPolicy:
                  MinimumLength: 8
                  RequireUppercase: false
                  RequireLowercase: true
                  RequireNumbers: true
                  RequireSymbols: false
                  TemporaryPasswordValidityDays: 7
          LambdaConfig: {}
          Schema:
            -
              Name: "sub"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: false
              Required: true
              StringAttributeConstraints:
                  MinLength: "1"
                  MaxLength: "2048"
            -
              Name: "name"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "given_name"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "family_name"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "middle_name"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "nickname"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "preferred_username"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "profile"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "picture"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "website"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "email"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: true
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "email_verified"
              AttributeDataType: "Boolean"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
            -
              Name: "gender"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "birthdate"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "10"
                  MaxLength: "10"
            -
              Name: "zoneinfo"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "locale"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "phone_number"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "phonenumber_verified"
              AttributeDataType: "Boolean"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
            -
              Name: "address"
              AttributeDataType: "String"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              StringAttributeConstraints:
                  MinLength: "0"
                  MaxLength: "2048"
            -
              Name: "updated_at"
              AttributeDataType: "Number"
              DeveloperOnlyAttribute: false
              Mutable: true
              Required: false
              NumberAttributeConstraints:
                  MinValue: "0"
          AutoVerifiedAttributes:
            - "email"
          UsernameAttributes:
            - "email"
          MfaConfiguration: "OFF"
          EmailConfiguration:
              EmailSendingAccount: "COGNITO_DEFAULT"
          AdminCreateUserConfig:
              AllowAdminCreateUserOnly: false
          UserPoolTags: {}
          AccountRecoverySetting:
              RecoveryMechanisms:
                -
                  Priority: 1
                  Name: "verified_email"
          UsernameConfiguration:
              CaseSensitive: false
          VerificationMessageTemplate:
              DefaultEmailOption: "CONFIRM_WITH_CODE"

    CognitoUserPoolDomain:
      Type: "AWS::Cognito::UserPoolDomain"
      Properties:
          Domain: "shiftboard"
          UserPoolId:
            Ref: CognitoUserPoolShiftboardUserPool

    UserPoolClient:
      Type: "AWS::Cognito::UserPoolClient"
      Properties:
          ClientName:
            Ref: AWS::StackName
          GenerateSecret: false
          ExplicitAuthFlows:
            - "ADMIN_NO_SRP_AUTH"
          ReadAttributes:
            - "email"
          RefreshTokenValidity: 30
          UserPoolId:
            Ref: CognitoUserPoolShiftboardUserPool
          WriteAttributes:
            - "email"


# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
plugins:
  - serverless-offline

custom:
  serverless-offline:
    useDocker: true
